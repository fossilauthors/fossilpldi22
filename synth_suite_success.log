Benchmark idx+1||exp+1||>0__dag__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 < 0),
                And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == d2(v1)%2, v1 == nil),
                Implies(Not(v1 == nil), 0 == d1(v1)%2)))
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d1(v1)%2),
            Implies(Not(v1 == nil), 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(0 == 0%2, Not(v1 == nil)),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == d1(v1)%2, 0 == d2(v1)%2),
                Implies(Not(v1 == nil), 0 == d2(v1)%2)))
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d1(v1)%2),
            Implies(Not(v1 == nil), 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d1(v1)%2),
            Implies(Not(v1 == nil), 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 1 == 0%2),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))
Implies(tree(v1),
        Implies(Implies(1 == d2(v1)%2, 1 == 0%2),
                Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))
Implies(tree(v1),
        Implies(Implies(1 == d2(v1)%2, 1 == 0%2),
                Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))
Implies(tree(v1),
        Implies(Implies(1 == d2(v1)%2, 1 == 0%2),
                Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))
Implies(tree(v1),
        Implies(Implies(d1(v1) > 0, 0 > 0),
                Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__dag__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > d2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > d2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__nocondition__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > d2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__nocondition__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark di>0keyupdate__dag__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__dag__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), key(v1) < 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__datacompare__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal is provable using induction.

Benchmark di>0keyupdate__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__datacompare__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), key(v1) < 0))

Benchmark di%2==0keyupdate__dag__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark di%2==0keyupdate__maxheap__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__maxheap__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark di%2==0keyupdate__bst__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark idx+1||exp+1||>0__dag__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__datacompare__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__keyrange__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__datacompare__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), Not(v1 == nil)),
                And(e2(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__keyrange__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 < 0),
                And(e1(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__keyrange__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e1(v1)%2),
            Implies(Not(v1 == nil), 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__keyrange__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(0 == e1(v1)%2, 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e1(v1)%2, 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), 0 == 0%2),
                And(0 == e2(v1)%2, 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e1(v1)%2, 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e3(v1)%2),
            Implies(Not(v1 == nil), 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e1(v1)%2),
            Implies(Not(v1 == nil), 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__datacompare__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e3(v1)%2, 0 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), Not(v1 == nil)),
                And(1 == e1(v1)%2, 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__keyrange__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 1 == 0%2),
                And(1 == e3(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(1 == e3(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e2(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 1 == 0%2),
                And(1 == e2(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), Not(v1 == nil)),
                And(1 == e2(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 1 == 0%2),
                And(1 == e2(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__datacompare__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e1(v1)%2),
            Implies(Not(v1 == nil), 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e1(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(1 == e2(v1)%2, 1 == e3(v1)%2)))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__keyrange__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e2(v1) > 0, e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__keyrange__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e3(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__nocondition__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) > 0, e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__keyrange__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e2(v1) > 0, e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) > 0, e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__dag__keyrange__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__keyrange__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e3(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__dag__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark di>0keyupdate__dag__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark di>0keyupdate__tree__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark di>0keyupdate__maxheap__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__maxheap__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark di>0keyupdate__tree_p__datacompare__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark di%2==0keyupdate__dag__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__maxheap__keyrange__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__bst__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__bst__datacompare__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))

Benchmark idx+1||exp+1||>0__dag__nocondition__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e3(v1) > 0, e1(v1) > 0), e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__datacompare__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(And(e3(v1) > 0, e2(v1) > 0),
                    And(e1(v1) > 0, Not(v1 == nil)))))

Benchmark idx+1||exp+1||>0__tree__nocondition__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) > 0, e3(v1) > 0)),
            Implies(e1(v1) > 0,
                    Implies(Not(v1 == nil), e2(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree__datacompare__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(0 > 0, e3(v1) > 0))))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(e2(v1) > 0, e3(v1) > 0)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__maxheap__datacompare__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e1(v1) > 0, e3(v1) > 0),
                    And(e2(v1) > 0, e3(v1) > 0))))

Benchmark idx+1||exp+1||>0__bst__nocondition__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(0 > 0, 0 > 0)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(e1(v1) > 0, v1 == nil),
                    And(v1 == nil, v1 == nil)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e2(v1) > 0, e3(v1) > 0)),
            And(Implies(0 > 0, e3(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark (idx+1)*-2||exp-1||<0__dag__nocondition__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(Implies(Not(v1 == nil), 0 < 0),
                        0 < 0),
                And(And(e1(v1) < 0, e3(v1) < 0),
                    Implies(e3(v1) < 0, e2(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(Not(v1 == nil), e2(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e1(v1) < 0, e2(v1) < 0), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e1(v1) < 0, e2(v1) < 0),
                        Implies(e3(v1) < 0, 0 < 0)),
                v1 == nil))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__datacompare__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e1(v1) < 0, e2(v1) < 0),
                        Implies(e3(v1) < 0, 0 < 0)),
                Implies(Not(v1 == nil), 0 < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e1(v1) < 0, e3(v1) < 0),
                        Implies(e2(v1) < 0, 0 < 0)),
                v1 == nil))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e2(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(0 < 0, e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0)),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0)),
            Implies(Not(v1 == nil),
                    Implies(e3(v1) < 0, e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e2(v1) < 0)),
            And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(e2(v1) < 0, v1 == nil),
                    And(v1 == nil, v1 == nil)),
            Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(e1(v1) < 0, e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(0 < 0, 0 < 0)),
            Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(e1(v1) < 0, e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, 0 < 0),
                    Implies(Not(v1 == nil), e2(v1) < 0)),
            Implies(Not(v1 == nil),
                    And(e3(v1) < 0, e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(Not(v1 == nil), e3(v1) < 0)),
            And(Implies(Not(v1 == nil), e1(v1) < 0),
                Implies(0 < 0, e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e3(v1) < 0, e1(v1) < 0),
                    Implies(Not(v1 == nil), e2(v1) < 0))))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e1(v1) > 0, e3(v1) > 0),
                    Implies(e3(v1) > 0, e2(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil),
                    And(e2(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e3(v1) > 0, e2(v1) > 0),
                        Implies(e1(v1) > 0, v1 == nil)),
                And(v1 == nil,
                    Implies(Not(v1 == nil), 0 > 0))))

Benchmark (idx+1)*2||exp*2||>0__bst__nocondition__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)),
            And(Implies(0 > 0, 0 > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Implies(v1 == nil, 0 > 0),
                    Implies(0 > 0, Not(v1 == nil))),
                And(And(e3(v1) > 0, e2(v1) > 0), e1(v1) > 0)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__nocondition__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__nocondition__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e3(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__nocondition__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__dag__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark di>0keyupdate__dag__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__datacompare__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__maxheap__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal is provable using induction.

Benchmark di>0keyupdate__tree_p__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di%2==0keyupdate__tree__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__maxheap__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__maxheap__datacompare__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__tree_p__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree_p__datacompare__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))

Benchmark idx+1||exp+1||>0__dag__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 < 0),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), Not(v1 == nil)),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(0 == 0%2, Not(v1 == nil)),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d1(v1)%2, 0 == d2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == d2(v1)%2),
            Implies(Not(v1 == nil), 0 == d1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == d2(v1)%2, 0 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d1(v1)%2, 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d2(v1)%2),
            Implies(Not(v1 == nil), 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == d2(v1)%2, 1 == d1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == d1(v1)%2),
            Implies(Not(v1 == nil), 1 == d2(v1)%2)))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 < 0),
                And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d1(v1) < 0, d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) < 0),
            Implies(Not(v1 == nil), d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) < 0),
            Implies(Not(v1 == nil), d2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) < 0, d1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) < 0, d2(v1) < 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d1(v1) > 0),
            Implies(Not(v1 == nil), d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), d2(v1) > 0),
            Implies(Not(v1 == nil), d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d1(v1) > 0, d2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(d2(v1) > 0, d1(v1) > 0)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__dag__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__keyrange__normal__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > d2(v1)))
Implies(tree(v1), Implies(0 > d2(v1), v1 == nil))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__keyrange__normal__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > d1(v1)))
Implies(tree(v1), Implies(0 > d1(v1), v1 == nil))

Benchmark di>0keyupdate__dag__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))

Benchmark di>0keyupdate__dag__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))
Implies(tree(v1), Implies(d1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), d2(v1) > 0))

Benchmark di>0keyupdate__tree_p__keyrange__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), d1(v1) > 0))
Implies(tree(v1), Implies(d2(v1) < 0, v1 == nil))

Benchmark di%2==0keyupdate__dag__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))

Benchmark di%2==0keyupdate__tree__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__bst__nocondition__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__bst__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark di%2==0keyupdate__tree_p__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark idx+1||exp+1||>0__dag__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__dag__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))
Implies(tree(v1),
        Implies(Implies(e2(v1) > 0, e1(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__maxheap__datacompare__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__keyrange__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__datacompare__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e2(v1) > 0, e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e1(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__keyrange__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__datacompare__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e3(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e3(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__datacompare__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e1(v1) < 0)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e1(v1)%2),
            Implies(Not(v1 == nil), 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e2(v1)%2, 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__keyrange__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(0 == e2(v1)%2, 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__maxheap__datacompare__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == e3(v1)%2, 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__nocondition__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(0 == e3(v1)%2, 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e2(v1)%2),
            Implies(Not(v1 == nil), 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__bst__datacompare__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e2(v1)%2, 0 == e3(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__nocondition__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e3(v1)%2),
            Implies(Not(v1 == nil), 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e2(v1)%2, 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__datacompare__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e2(v1)%2, 0 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__nocondition__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e2(v1)%2),
            Implies(Not(v1 == nil), 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil), Not(v1 == nil)),
                And(1 == e3(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__nocondition__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(1 == e1(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__keyrange__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e1(v1)%2),
            Implies(Not(v1 == nil), 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e2(v1)%2),
            Implies(Not(v1 == nil), 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(1 == e2(v1)%2, 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__keyrange__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 1 == 0%2),
                And(1 == e1(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e2(v1)%2, 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2, 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e2(v1)%2, 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__nocondition__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e3(v1)%2),
            Implies(Not(v1 == nil), 1 == e1(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e1(v1)%2, 1 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2, 1 == e2(v1)%2)))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 < 0),
                And(e1(v1) < 0, e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) < 0),
            Implies(Not(v1 == nil), e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e2(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) < 0, e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) < 0, e1(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil), e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, Not(v1 == nil)),
                And(e1(v1) < 0, e2(v1) < 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e3(v1) > 0, e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__keyrange__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__keyrange__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e3(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__keyrange__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))
Implies(tree(v1),
        Implies(Implies(e1(v1) > 0, e2(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__keyrange__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e1(v1) > 0, e2(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil), And(e2(v1) > 0, e1(v1) > 0)))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__normal__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e3(v1) > 0),
            Implies(Not(v1 == nil), e2(v1) > 0)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__dag__nocondition__normal__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e3(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__nocondition__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__nocondition__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__nocondition__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__nocondition__normal__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e3(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__dag__nocondition__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__dag__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree__datacompare__normal__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__datacompare__normal__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal is provable using induction.

Benchmark di>0keyupdate__tree_p__nocondition__skipone__cycle=e2,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), key(v1) < 0))

Benchmark di%2==0keyupdate__dag__nocondition__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__dag__datacompare__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))

Benchmark di%2==0keyupdate__tree__keyrange__skipone__cycle=e1,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))

Benchmark di%2==0keyupdate__maxheap__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))

Benchmark di%2==0keyupdate__maxheap__datacompare__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))

Benchmark di%2==0keyupdate__bst__keyrange__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))

Benchmark di%2==0keyupdate__tree_p__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree_p__datacompare__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark idx+1||exp+1||>0__dag__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) > 0),
                Implies(Not(v1 == nil), Not(v1 == nil))),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree__nocondition__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree__keyrange__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(e3(v1) > 0, And(e2(v1) > 0, e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree__datacompare__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)),
            Implies(Not(v1 == nil),
                    And(e3(v1) > 0, Not(v1 == nil)))))

Benchmark idx+1||exp+1||>0__maxheap__datacompare__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(v1 == nil, 0 > 0),
                And(And(e3(v1) > 0, e2(v1) > 0),
                    And(Not(v1 == nil), e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__bst__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e2(v1) > 0, e3(v1) > 0), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__bst__datacompare__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)),
            Implies(Not(v1 == nil), e3(v1) > 0)))

Benchmark (idx+1)*-2||exp-1||<0__dag__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e3(v1) < 0, e2(v1) < 0)),
            Implies(Implies(v1 == nil, 0 < 0), e1(v1) < 0)))

Benchmark (idx+1)*-2||exp-1||<0__bst__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(e2(v1) < 0, 0 < 0),
                    Implies(e3(v1) < 0, v1 == nil)),
            And(Implies(Not(v1 == nil), e1(v1) < 0),
                Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(Implies(Not(v1 == nil), 0 < 0),
                        0 < 0),
                And(Implies(e2(v1) < 0, e1(v1) < 0),
                    And(e3(v1) < 0, e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__dag__nocondition__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Implies(0 < 0, 0 < 0), Not(v1 == nil)),
                And(And(e2(v1) < 0, e3(v1) < 0),
                    And(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__dag__datacompare__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0)),
            And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree__keyrange__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(0 < 0, e2(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree__datacompare__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e3(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e3(v1) < 0)),
            And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__bst__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0)),
            And(Implies(0 < 0, Not(v1 == nil)),
                Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark (idx+1)*2||exp*2||>0__dag__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)),
            Implies(Implies(e3(v1) > 0, 0 > 0), v1 == nil)))

Benchmark (idx+1)*2||exp*2||>0__dag__datacompare__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e1(v1) > 0, e3(v1) > 0),
                    And(e2(v1) > 0, e3(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) > 0, e3(v1) > 0)),
            And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(0 > 0, key(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(0 > 0, Not(v1 == nil))),
            Implies(Not(v1 == nil),
                    And(e1(v1) > 0, e2(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__maxheap__nocondition__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(Implies(e1(v1) > 0, e2(v1) > 0),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e2(v1) > 0, e1(v1) > 0),
                        Implies(e3(v1) > 0, 0 > 0)),
                v1 == nil))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(e1(v1) > 0, And(e3(v1) > 0, e2(v1) > 0))))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__dag__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e3(v1)))
Implies(tree(v1), Implies(0 > e3(v1), v1 == nil))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e3(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e1(v1) > e3(v1), v1 == nil))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__keyrange__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__dag__datacompare__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))

Benchmark di>0keyupdate__tree__keyrange__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))

Benchmark di>0keyupdate__tree__datacompare__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__maxheap__datacompare__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(e2(v1) < 0, v1 == nil))

Benchmark di>0keyupdate__tree_p__datacompare__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(e1(v1) < 0, v1 == nil))
Implies(tree(v1), Implies(e3(v1) < 0, v1 == nil))

Benchmark di%2==0keyupdate__tree__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree__datacompare__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__maxheap__keyrange__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__bst__nocondition__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__bst__datacompare__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))

Benchmark di%2==0keyupdate__tree_p__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__dag__datacompare__skipone__cycle=d2,d1__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark di%2==0keyupdate__tree_p__nocondition__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark di%2==0keyupdate__tree_p__datacompare__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == key(v1)%2))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__nocondition__skipone__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(0 == e3(v1)%2, 0 == e1(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e3(v1)%2),
            Implies(Not(v1 == nil), 0 == e2(v1)%2)))

Benchmark 2||exp+2*(idx+1)||%2==0__tree_p__nocondition__skipone__cycle=e1,e3__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 0 == e1(v1)%2),
            Implies(Not(v1 == nil), 0 == e3(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__nocondition__skipone__cycle=e2,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e1(v1)%2, 1 == e2(v1)%2)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__dag__datacompare__skipone__cycle=e3,e2__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e2(v1)%2),
            Implies(Not(v1 == nil), 1 == e3(v1)%2)))

Benchmark idx+1||exp+1||>0__dag__keyrange__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0)),
            Implies(Implies(v1 == nil, 0 > 0), e1(v1) > 0)))

Benchmark idx+1||exp+1||>0__tree__keyrange__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, e1(v1) > 0),
                    e1(v1) > 0),
            And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0))))

Benchmark idx+1||exp+1||>0__maxheap__keyrange__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(And(Not(v1 == nil),
                    Implies(e1(v1) > 0, e1(v1) > 0)),
                And(And(e1(v1) > 0, e2(v1) > 0),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__bst__keyrange__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, 0 > 0),
                    And(e3(v1) > 0, e2(v1) > 0)),
            And(Implies(0 > 0, 0 > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__bst__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(0 > 0, e3(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)),
            And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(e3(v1) > 0, 0 > 0), v1 == nil),
            Implies(And(e3(v1) > 0, Not(v1 == nil)),
                    And(e2(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*-2||exp-1||<0__tree__datacompare__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(e2(v1) < 0, And(e3(v1) < 0, e1(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, 0 < 0),
                    And(e2(v1) < 0, e3(v1) < 0)),
            Implies(Implies(e1(v1) < 0, 0 < 0),
                    Implies(Not(v1 == nil), 0 < 0))))

Benchmark (idx+1)*-2||exp-1||<0__bst__keyrange__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e2(v1) < 0),
            Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e3(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__nocondition__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e2(v1) < 0, e1(v1) < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), 1 == e1(v1)%2),
                Implies(Not(v1 == nil), 1 == e2(v1)%2)),
            Implies(Implies(1 == e3(v1)%2, v1 == nil),
                    v1 == nil)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2,
                    And(1 == e2(v1)%2, 1 == e1(v1)%2))))

Benchmark -(idx+1)||exp*2||<0__maxheap__nocondition__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e3(v1) < 0, e1(v1) < 0)),
            And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e3(v1) < 0, e1(v1) < 0),
                        Implies(e2(v1) < 0, 0 < 0)),
                Implies(Implies(0 < 0, 0 < 0),
                        Implies(Not(v1 == nil), 0 < 0))))

Benchmark -(idx+1)||exp*2||<0__bst__keyrange__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(e3(v1) < 0, e1(v1) < 0)),
            And(Implies(0 < 0, e1(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__tree_p__nocondition__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0)),
            Implies(And(e2(v1) < 0, Not(v1 == nil)),
                    e3(v1) < 0)))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__normal__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e3(v1) < 0, e2(v1) < 0),
                    Implies(e3(v1) < 0, e1(v1) < 0))))

Benchmark (idx+1)*2||exp*2||>0__dag__keyrange__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0)),
            Implies(e2(v1) > 0,
                    Implies(Not(v1 == nil), e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree__nocondition__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e1(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)),
            And(Implies(0 > 0, 0 > 0),
                Implies(Not(v1 == nil), e3(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree__keyrange__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e2(v1) > 0, e3(v1) > 0),
                        Implies(e1(v1) > 0, v1 == nil)),
                Implies(Implies(0 > 0, 0 > 0), v1 == nil)))

Benchmark (idx+1)*2||exp*2||>0__tree__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(And(e1(v1) > 0, Not(v1 == nil)),
                    And(e2(v1) > 0, e3(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__maxheap__datacompare__normal__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(e2(v1) > 0, And(e3(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), Not(v1 == nil))),
            Implies(And(Not(v1 == nil), e2(v1) > 0),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree_p__keyrange__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), e1(v1) > 0),
            Implies(And(e1(v1) > 0, Not(v1 == nil)),
                    And(e3(v1) > 0, e2(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__normal__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) > 0),
                Implies(Not(v1 == nil), e1(v1) > 0)),
            And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e3(v1) > 0))))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree__keyrange__normal__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e3(v1)))
Implies(tree(v1), Implies(0 > e3(v1), v1 == nil))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__keyrange__normal__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e3(v1)))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__tree_p__keyrange__normal__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > 0))
Implies(tree(v1), Implies(Not(v1 == nil), e3(v1) > e1(v1)))

Benchmark di%2==0keyupdate__bst__keyrange__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e2(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e3(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == e1(v1)%2))

Benchmark di%2==0keyupdate__maxheap__keyrange__skipone__cycle=d1,d2__2/2
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d1(v1)%2))
Implies(tree(v1), Implies(Not(v1 == nil), 0 == d2(v1)%2))

Benchmark 2||exp+2*(idx+1)||%2==0__dag__datacompare__normal__cycle=e3,e1__2/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(0 == 0%2, Not(v1 == nil)),
                And(0 == e3(v1)%2, 0 == e1(v1)%2)))

Benchmark idx+1||exp+1||>0__dag__keyrange__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(Implies(e1(v1) > 0, e2(v1) > 0),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__maxheap__nocondition__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(v1 == nil, v1 == nil), 0 > 0),
                And(e3(v1) > 0, And(e1(v1) > 0, e2(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree_p__nocondition__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(And(e2(v1) > 0, e1(v1) > 0),
                        Implies(e3(v1) > 0, 0 > 0)),
                v1 == nil))

Benchmark idx+1||exp+1||>0__tree_p__keyrange__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)),
            Implies(Not(v1 == nil),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark idx+1||exp+1||>0__tree_p__datacompare__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Implies(Implies(Not(v1 == nil), v1 == nil),
                        0 > 0),
                And(Implies(e2(v1) > 0, e3(v1) > 0),
                    And(e1(v1) > 0, e2(v1) > 0))))

Benchmark (idx+1)*-2||exp-1||<0__tree__nocondition__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(e1(v1) < 0, And(e2(v1) < 0, e3(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__nocondition__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e3(v1) < 0, e1(v1) < 0)),
            And(Implies(0 < 0, e3(v1) < 0),
                Implies(Not(v1 == nil), e2(v1) < 0))))

Benchmark (idx+1)*-2||exp-1||<0__maxheap__datacompare__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(e1(v1) < 0, e2(v1) < 0)),
            Implies(Implies(e3(v1) < 0, 0 < 0), v1 == nil)))

Benchmark (idx+1)*-2||exp-1||<0__tree_p__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e2(v1) < 0)),
            Implies(Implies(0 < 0, e2(v1) < 0),
                    Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree__datacompare__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(1 == e3(v1)%2,
                    And(1 == e1(v1)%2, 1 == e2(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__nocondition__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), Not(v1 == nil)),
                Implies(Not(v1 == nil), 1 == e3(v1)%2)),
            Implies(And(Not(v1 == nil), Not(v1 == nil)),
                    And(1 == e2(v1)%2, 1 == e1(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__keyrange__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(Implies(Not(v1 == nil), 1 == e3(v1)%2),
                    And(1 == e1(v1)%2, 1 == e2(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__maxheap__datacompare__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), 1 == e2(v1)%2),
                Implies(Not(v1 == nil), 1 == e1(v1)%2)),
            Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(1 == e3(v1)%2, Not(v1 == nil)))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(1 == e2(v1)%2, 1 == e3(v1)%2)),
            Implies(Implies(1 == e1(v1)%2, v1 == nil),
                    v1 == nil)))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__keyrange__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), 1 == e1(v1)%2),
                Implies(Not(v1 == nil), 1 == e2(v1)%2)),
            Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(1 == e3(v1)%2, 1 == e1(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__bst__datacompare__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(1 == key(v1)%2, 1 == key(v1)%2),
                Implies(Not(v1 == nil), 1 == e1(v1)%2)),
            Implies(Not(v1 == nil),
                    And(1 == e3(v1)%2, 1 == e2(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), 1 == e2(v1)%2),
                Implies(Not(v1 == nil), 1 == e1(v1)%2)),
            And(Implies(Not(v1 == nil), Not(v1 == nil)),
                Implies(Not(v1 == nil), 1 == e3(v1)%2))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__keyrange__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(1 == e2(v1)%2, 1 == e1(v1)%2)),
            And(Implies(Not(v1 == nil), 1 == e3(v1)%2),
                Implies(v1 == nil, v1 == nil))))

Benchmark 2*idx+1||exp+2*(idx+1)||%2==1__tree_p__datacompare__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil), 1 == e1(v1)%2),
            Implies(Implies(v1 == nil, Not(v1 == nil)),
                    And(1 == e3(v1)%2, 1 == e2(v1)%2))))

Benchmark -(idx+1)||exp*2||<0__dag__keyrange__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(0 < 0, 0 < 0)),
            And(Implies(Not(v1 == nil), e3(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__maxheap__keyrange__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, Not(v1 == nil)),
                    e3(v1) < 0),
            And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__maxheap__datacompare__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e2(v1) < 0),
                Implies(Not(v1 == nil), e1(v1) < 0)),
            Implies(Implies(v1 == nil, 0 < 0),
                    Implies(Not(v1 == nil), e3(v1) < 0))))

Benchmark -(idx+1)||exp*2||<0__bst__datacompare__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(And(e1(v1) < 0, Not(v1 == nil)),
                    And(e3(v1) < 0, e2(v1) < 0)),
            Implies(Implies(e1(v1) < 0, 0 < 0),
                    And(v1 == nil, v1 == nil))))

Benchmark -(idx+1)||exp*2||<0__tree_p__keyrange__skipone__cycle=e3,e1,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Implies(v1 == nil, 0 < 0),
                    And(e2(v1) < 0, e1(v1) < 0)),
            Implies(Implies(e3(v1) < 0, 0 < 0),
                    Implies(Not(v1 == nil), 0 < 0))))

Benchmark -(idx+1)||exp*2||<0__tree_p__datacompare__skipone__cycle=e3,e2,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(Not(v1 == nil),
                    And(e1(v1) < 0, e2(v1) < 0)),
            Implies(Implies(e3(v1) < 0, 0 < 0),
                    Implies(e1(v1) < 0, v1 == nil))))

Benchmark (idx+1)*2||exp*2||>0__bst__datacompare__skipone__cycle=e1,e2,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(Implies(And(Not(v1 == nil), Not(v1 == nil)),
                    Implies(Not(v1 == nil), e3(v1) > 0)),
            Implies(Not(v1 == nil),
                    And(e2(v1) > 0, e1(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree_p__nocondition__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        Implies(Not(v1 == nil),
                And(And(e1(v1) > 0, Not(v1 == nil)),
                    And(e3(v1) > 0, e2(v1) > 0))))

Benchmark (idx+1)*2||exp*2||>0__tree_p__datacompare__skipone__cycle=e2,e1,e3__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1),
        And(And(Implies(Not(v1 == nil), e3(v1) > 0),
                Implies(Not(v1 == nil), e2(v1) > 0)),
            Implies(Not(v1 == nil),
                    And(e3(v1) > 0, e1(v1) > 0))))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__maxheap__keyrange__skipone__cycle=e1,e3,e2__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > e2(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > 0))

Benchmark 2*(n-idx)||2d1-dk,2d2-dk,..d1||>0__bst__keyrange__skipone__cycle=e2,e3,e1__3/3
---------------------------------------------------
goal is not first-order provable.
goal cannot be proved by induction.
Lemmas used to prove goal:
Implies(tree(v1), Implies(Not(v1 == nil), e2(v1) > e1(v1)))
Implies(tree(v1), Implies(Not(v1 == nil), e1(v1) > 0))
